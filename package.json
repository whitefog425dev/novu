{
  "name": "notifirehq",
  "private": true,
  "scripts": {
    "preinstall": "npx only-allow pnpm",
    "publish": "lerna publish from-package",
    "setup:project": "npx pnpm i && node scripts/setup-env-files.js && npx pnpm build",
    "commit": "cz",
    "generate:provider": "npx hygen provider new",
    "start": "cross-env TZ=UTC mono-run start:dev --stream 500",
    "lint": "mono-run lint -- . --cache --ext .js,.jsx,.ts,.tsx",
    "test": "cross-env CI=true mono-run test:watch --stream --parallel",
    "bootstrap": "pnpm setup:dev",
    "copy:files": "cpx README.md packages/core",
    "prerelease": "pnpm copy:files",
    "start:web": "cross-env nx run @notifire/web:start",
    "start:widget:test": "cross-env nx run-many --target=start:test  --projects=@notifire/widget",
    "start:ws:test": "cross-env nx run-many --target=start:test --projects=@notifire/ws",
    "start:server": "cross-env lerna run --parallel --ignore @notifire/client start:dev",
    "start:server:prod": "lerna run --parallel --ignore @notifire/client start",
    "start:static:web": "cross-env nx run-many --target=start:static:build --projects=@notifire/web",
    "start:static:widget": "cross-env nx run-many --target=start:static:build --projects=@notifire/widget",
    "build": "nx run-many --target=build --all",
    "build:api": "nx build @notifire/api",
    "build:ws": "nx build @notifire/ws",
    "build:web": "nx build @notifire/web",
    "build:widget": "nx build @notifire/widget",
    "build:sdk": "nx build @notifire/sdk",
    "build:storybook": "nx build @notifire/web && nx run @notifire/web:build-storybook",
    "test:providers": "find providers -name package.json -not -path \"*/node_modules/*\" -exec bash -c \"pnpm --prefix \\$(dirname {}) test\" \\;",
    "release:patch": "lerna version patch",
    "release:prerelease": "lerna version prerelease",
    "start:e2e:api": "cd apps/api && pnpm start:test",
    "g:module": "hygen module new --name=$npm_config_name",
    "g:usecase": "hygen usecase new --name=$npm_config_name --module=$npm_config_module",
    "get-remote-env-files": "doppler secrets download --project api --config dev --no-file --format env > apps/api/src/.env"
  },
  "devDependencies": {
    "@auto-it/jira": "^10.27.1",
    "@auto-it/npm": "^10.27.1",
    "@auto-it/released": "^10.27.1",
    "@commitlint/cli": "13.2.1",
    "@commitlint/config-angular": "^13.2.0",
    "@hewmen/serverless-plugin-typescript": "^1.1.17",
    "@nrwl/nx-cloud": "^13.0.2",
    "@nrwl/workspace": "^13.4.3",
    "@nrwl/cli": "^13.4.3",
    "@nrwl/tao": "^13.4.3",
    "@types/node": "^14.6.0",
    "@typescript-eslint/eslint-plugin": "4.13.0",
    "@typescript-eslint/parser": "^4.13.0",
    "auto": "^10.27.1",
    "commitizen": "^4.2.4",
    "cpx": "^1.5.0",
    "cross-env": "^7.0.3",
    "cspell": "^4.1.0",
    "cypress-intellij-reporter": "^0.0.6",
    "cz-conventional-changelog": "3.3.0",
    "eslint": "^7.22.0",
    "eslint-config-airbnb-typescript": "^12.0.0",
    "eslint-config-prettier": "^7.2.0",
    "eslint-import-resolver-webpack": "^0.13.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-functional": "^3.0.2",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-prettier": "^3.3.1",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-react": "^7.22.0",
    "eslint-plugin-react-hooks": "^4.2.0",
    "husky": "^4.2.5",
    "hygen": "6.0.4",
    "jira-prepare-commit-msg": "1.5.2",
    "lerna": "^3.20.2",
    "lint-staged": "^10.2.2",
    "monorepo-run": "git+https://github.com/scopsy/monorepo-run.git",
    "pnpm": "^6.25.0",
    "prettier": "^2.0.5",
    "rimraf": "^3.0.2",
    "ts-node": "^9.0.0",
    "typescript": "^4.4.3"
  },
  "workspaces": {
    "packages": [
      "apps/*",
      "libs/*",
      "packages/*",
      "providers/*"
    ]
  },
  "lint-staged": {
    "packages/**/*.{ts,json}": [
      "prettier --ignore-path ./.prettierignore --write"
    ],
    "providers/**/*.{ts,json}": [
      "prettier --ignore-path ./.prettierignore --write"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
