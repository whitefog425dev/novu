# This is a basic workflow to help you get started with Actions

name: Deploy DEV Widget

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'apps/widget/**'
      - 'apps/ws/**'
      - 'libs/shared/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test_widget:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    timeout-minutes: 80
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    environment: Development

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup kernel for react native, increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'
      - name: Start Redis
        uses: supercharge/redis-github-action@1.2.0

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.2.8

      - name: Cache pnpm modules
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.0.2
          run_install: true

      # Runs a single command using the runners shell
      - name: Build
        run: CI='' pnpm build:widget

      # Runs a single command using the runners shell
      - name: Start Client
        run: pnpm start:widget:test &

      # Runs a single command using the runners shell
      - name: Start WS
        run: npm run start:ws:test &

      # Runs a single command using the runners shell
      - name: Wait for WS
        run: npx wait-on --timeout=30000 http://localhost:1340/v1/health-check

      - name: Cypress run
        uses: cypress-io/github-action@v2
        env:
          NODE_ENV: test
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          working-directory: apps/widget
          start: pnpm start:api
          wait-on: http://localhost:3500/v1/health-check
          browser: chrome
          install: false
          headless: true

      - name: Build PROD
        env:
          REACT_APP_API_URL: https://dev.api.novu.co
          REACT_APP_SENTRY_DSN: https://02189965b1bb4cf8bb4776f417f80b92@o1161119.ingest.sentry.io/625116
          REACT_APP_WS_URL: https://dev.ws.novu.co
          REACT_APP_ENVIRONMENT: dev
        working-directory: apps/widget
        run: npm run build

      - name: Deploy WIDGET to DEV
        uses: scopsy/actions-netlify@develop
        with:
          publish-dir: apps/widget/build
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: dev
          production-deploy: true
          alias: dev
          github-deployment-environment: development
          github-deployment-description: Web Deployment
          netlify-config-path: apps/widget/netlify.toml
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: b9147448-b835-4eb1-a2f0-11102f611f5f
        timeout-minutes: 1

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: apps/widget/cypress/screenshots




